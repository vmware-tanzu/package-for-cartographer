# Copyright 2022 VMware
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: ci

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3


      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'


      - name: Install base dependencies
        run: |-
          sudo apt-get update && sudo apt-get install -y curl tar jq
          ./hack/ci/install-binaries.sh grype imgpkg kbld ytt kapp tanzu whocan


      - name: Start cluster and registry, then install dependencies
        run: |-
          ./hack/cluster.sh start apply-dependencies


      - name: Create and apply Package objects to the cluster
        run: |-
          bundle=$(./hack/ci/ip.py):5000/bundle

          BUNDLE=$bundle ./hack/bundle.sh
          kubectl apply -f ./release


      - name: Check all YAML and README Markdown
        run: |-
          make check


      - name: Grype scan
        continue-on-error: true
        run: |-
          ./hack/scan.sh


      - name: Install Package
        run: |-
          tanzu package install \
            --package-name cartographer.tanzu.vmware.com \
            --version 0.0.0 \
            cartographer


      - name: Run tests
        run: |-
          for test_script in ./tests/*.sh; do
            echo -e "\t Running test $test_script"
            $test_script
          done


  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3


      - name: Install base dependencies
        run: |-
          sudo apt update && sudo apt install -y curl tar
          ./hack/ci/install-binaries.sh imgpkg kbld ytt kapp gh


      - name: Release
        env:
          BUNDLE: projectcartographer/package-for-cartographer
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: projectcartographer
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

          RELEASE_VERSION=${GITHUB_REF_NAME#v} ./hack/bundle.sh
          ./hack/publish.sh $GITHUB_REF_NAME
